ARG ALPINE_RELEASE=3.12
FROM alpine:${ALPINE_RELEASE}

LABEL maintainer="Roman Gonzalez <roman.gonzalez.ea@gmail.com>"

ENV TERM screen-256color
ENV EDITOR nvim

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

RUN set -ex; \
  echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories \
  && echo "@edge-community http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
  && echo "@edge-testing http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories \
  && apk update \
  && apk upgrade \
  && apk add \
    curl \
    ripgrep \
    xclip \
    tcpdump \
    bash \
    bash-completion \
    openssh-client \
    p7zip \
    ctags \
    neovim \
    sudo@edge \
    tmux \
    git@edge \
    fzf@edge-community \
    python3 \
    py3-pip \
    bat@edge-testing \
    nodejs-current@edge-community \
    npm@edge \
    libuv@edge \
  && apk add --virtual .build-deps \
    gcc \
    python3-dev \
    musl-dev \
  && pip3 install pynvim \
  && apk del .build-deps \
  && rm -vrf /var/cache/apk/*

# Non root user
ARG NON_ROOT_USER=dev
ENV USER ${NON_ROOT_USER}

ARG PUID=1000
ARG PGID=1000
ENV PUID ${PUID}
ENV PGID ${PGID}

RUN set -ex; \
  addgroup --gid ${PGID} ${USER} \
  && adduser \
    --disabled-password \
    --ingroup ${USER} \
    --shell /bin/bash \
    --uid ${PUID} \
    ${USER} \
  && echo "${USER} ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers

ENV HOME /home/${USER}

# Set the user to be our newly created user by default.
USER ${USER}

ENV NPM_CONFIG_PREFIX $HOME/.npm-global
ENV XDG_CONFIG_HOME $HOME/.config
ENV PATH $NPM_CONFIG_PREFIX/bin:$PATH

# script for install CoC.nvim extension
COPY coc-install /usr/local/bin/coc-install

# novim configuration
COPY nvim "$HOME/.config/nvim"

RUN set -ex; \
  # fix permissions of home directory
  sudo chown -R $USER:$USER $HOME \
  # install tmux plugin manager
  && git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm \
  # Install vim-plug
  && sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim' \
  # Install nvim plugins
  && nvim +PlugInstall +qall \
  # installing CoC.nvim extensions
  && sudo chmod +x /usr/local/bin/coc-install \
  && coc-install --extensions \
    "coc-snippets coc-yaml coc-docker coc-json coc-sh coc-fzf-preview" \
  # install starship prompt
  && curl -fsSL https://starship.rs/install.sh --output /tmp/starship.sh \
  && sudo chmod +x /tmp/starship.sh \
  && sudo bash /tmp/starship.sh --yes \
  && rm -rf /tmp/starship.sh \
  # add an alias for it that opens vim with the conflicted plugin activated
  && git config --global alias.conflicted '!nvim +Conflicted'

# Copy configurations
COPY --chown=${USER}:${USER} inputrc "$HOME/.inputrc"
COPY --chown=${USER}:${USER} .bashrc "$HOME/.bashrc"
COPY --chown=${USER}:${USER} .tmux.conf "$HOME/.tmux.conf"
COPY --chown=${USER}:${USER} .bash "$HOME/.bash"

WORKDIR $HOME

CMD [ "/bin/bash" ]
